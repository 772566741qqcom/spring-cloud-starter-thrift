<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.ostenant.rpc.thrift.examples.mapper.DepositCardMapper">
    <resultMap id="BaseResultMap" type="io.ostenant.rpc.thrift.examples.http.entities.DepositCard">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="is_vip" jdbcType="BIT" property="isVip"/>
        <result column="opening_time" jdbcType="VARCHAR" property="openingTime"/>
        <result column="account_balance" jdbcType="DOUBLE" property="accountBalance"/>
        <result column="account_flow" jdbcType="DOUBLE" property="accountFlow"/>
        <result column="branch_id" jdbcType="BIGINT" property="branchId"/>
        <result column="customer_id" jdbcType="VARCHAR" property="customerId"/>
    </resultMap>


    <sql id="Base_Column_List">
        id, is_vip, opening_time, account_balance, account_flow, branch_id, customer_id
    </sql>


    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deposit_card
        where id = #{id,jdbcType=VARCHAR}
    </select>


    <delete id="deleteById" parameterType="java.lang.String">
        DELETE FROM deposit_card
        WHERE id = #{id,jdbcType=VARCHAR}
    </delete>


    <insert id="save" parameterType="io.ostenant.rpc.thrift.examples.http.entities.DepositCard">
        INSERT INTO deposit_card (id, is_vip, opening_time,
                                  account_balance, account_flow, branch_id,
                                  customer_id)
        VALUES (#{id,jdbcType=VARCHAR}, #{isVip,jdbcType=BIT}, #{openingTime,jdbcType=VARCHAR},
                #{accountBalance,jdbcType=DOUBLE}, #{accountFlow,jdbcType=DOUBLE}, #{branchId,jdbcType=BIGINT},
                #{customerId,jdbcType=VARCHAR})
    </insert>


    <update id="update" parameterType="io.ostenant.rpc.thrift.examples.http.entities.DepositCard">
        update deposit_card
        <set>
            <if test="isVip != null">
                is_vip = #{isVip,jdbcType=BIT},
            </if>
            <if test="openingTime != null">
                opening_time = #{openingTime,jdbcType=VARCHAR},
            </if>
            <if test="accountBalance != null">
                account_balance = #{accountBalance,jdbcType=DOUBLE},
            </if>
            <if test="accountFlow != null">
                account_flow = #{accountFlow,jdbcType=DOUBLE},
            </if>
            <if test="branchId != null">
                branch_id = #{branchId,jdbcType=BIGINT},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>


    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deposit_card
    </select>


    <select id="findByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deposit_card
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="queryAllDepositCards" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM deposit_card
        WHERE customer_id = #{customerId}
    </select>


    <select id="countRowsByCustomerId" resultType="java.lang.Long" parameterType="java.lang.String">
        SELECT COUNT(id)
        FROM deposit_card
        WHERE customer_id = #{customerId}
    </select>


    <delete id="deleteByIds" parameterType="java.util.List">
        delete from
        deposit_card
        where
        id in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </delete>


    <insert id="saveBatch" parameterType="java.util.List">
        insert into
        deposit_card
        (id, is_vip, opening_time, account_balance, account_flow, branch_id, customer_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.isVip,jdbcType=BIT}, #{item.openingTime,jdbcType=VARCHAR},
            #{item.accountBalance,jdbcType=DOUBLE}, #{item.accountFlow,jdbcType=DOUBLE},
            #{item.branchId,jdbcType=BIGINT}, #{item.customerId,jdbcType=VARCHAR})
        </foreach>
    </insert>


    <update id="updateBatch" parameterType="java.util.List">
        update deposit_card
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="is_vip = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.isVip != null">
                        when #{item.id,jdbcType=VARCHAR} then #{item.isVip,jdbcType=BIT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="opening_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.openingTime != null">
                        when #{item.id,jdbcType=VARCHAR} then #{item.openingTime,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="account_balance = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.accountBalance != null">
                        when #{item.id,jdbcType=VARCHAR} then #{item.accountBalance,jdbcType=DOUBLE}
                    </if>
                </foreach>
            </trim>
            <trim prefix="account_flow = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.accountFlow != null">
                        when #{item.id,jdbcType=VARCHAR} then #{item.accountFlow,jdbcType=DOUBLE}
                    </if>
                </foreach>
            </trim>
            <trim prefix="branch_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.branchId != null">
                        when #{item.id,jdbcType=VARCHAR} then #{item.branchId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="customer_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.customerId != null">
                        when #{item.id,jdbcType=VARCHAR} then #{item.customerId,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>


    <update id="decrementMoney">
        UPDATE deposit_card
        <set>
            <if test="money != null">
                account_balance = account_balance - #{money},
            </if>
        </set>
        WHERE id = #{depositCardId}
    </update>

    <update id="incrementMoney">
        UPDATE deposit_card
        <set>
            <if test="money != null">
                account_balance = account_balance + #{money},
            </if>
        </set>
        WHERE id = #{depositCardId}
    </update>

</mapper>