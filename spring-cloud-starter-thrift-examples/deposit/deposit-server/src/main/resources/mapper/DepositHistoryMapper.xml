<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.ostenant.rpc.thrift.examples.mapper.DepositHistoryMapper">
    <resultMap id="BaseResultMap" type="io.ostenant.rpc.thrift.examples.http.entities.DepositHistory">
        <id column="serial_number" jdbcType="VARCHAR" property="serialNumber"/>
        <result column="transaction_amount" jdbcType="DOUBLE" property="transactionAmount"/>
        <result column="submitted_time" jdbcType="VARCHAR" property="submittedTime"/>
        <result column="finished_time" jdbcType="VARCHAR" property="finishedTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="deposit_card_id" jdbcType="VARCHAR" property="depositCardId"/>
    </resultMap>


    <sql id="Base_Column_List">
        serial_number, transaction_amount, submitted_time, finished_time, status, deposit_card_id
    </sql>


    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deposit_history
        where serial_number = #{serialNumber,jdbcType=VARCHAR}
    </select>


    <delete id="deleteById" parameterType="java.lang.String">
        DELETE FROM deposit_history
        WHERE serial_number = #{serialNumber,jdbcType=VARCHAR}
    </delete>


    <insert id="save" parameterType="io.ostenant.rpc.thrift.examples.http.entities.DepositHistory">
        INSERT INTO deposit_history (serial_number, transaction_amount, submitted_time,
                                     finished_time, status, deposit_card_id
        )
        VALUES
            (#{serialNumber,jdbcType=VARCHAR}, #{transactionAmount,jdbcType=DOUBLE}, #{submittedTime,jdbcType=VARCHAR},
             #{finishedTime,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{depositCardId,jdbcType=VARCHAR}
            )
    </insert>


    <update id="update" parameterType="io.ostenant.rpc.thrift.examples.http.entities.DepositHistory">
        update deposit_history
        <set>
            <if test="transactionAmount != null">
                transaction_amount = #{transactionAmount,jdbcType=DOUBLE},
            </if>
            <if test="submittedTime != null">
                submitted_time = #{submittedTime,jdbcType=VARCHAR},
            </if>
            <if test="finishedTime != null">
                finished_time = #{finishedTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="depositCardId != null">
                deposit_card_id = #{depositCardId,jdbcType=VARCHAR},
            </if>
        </set>
        where serial_number = #{serialNumber,jdbcType=VARCHAR}
    </update>


    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deposit_history
    </select>


    <select id="findByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from deposit_history
        where serial_number in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </select>


    <select id="queryDepositHistoryList" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM deposit_history
        WHERE deposit_card_id = #{depositCardId}
        ORDER BY finished_time
    </select>


    <delete id="deleteByIds" parameterType="java.util.List">
        delete from
        deposit_history
        where
        id in
        <foreach close=")" collection="list" item="item" open="(" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
    </delete>


    <insert id="saveBatch" parameterType="java.util.List">
        insert into
        deposit_history
        (serial_number, transaction_amount, submitted_time, finished_time, status, deposit_card_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.serialNumber,jdbcType=VARCHAR}, #{item.transactionAmount,jdbcType=DOUBLE},
            #{item.submittedTime,jdbcType=VARCHAR}, #{item.finishedTime,jdbcType=VARCHAR},
            #{item.status,jdbcType=INTEGER}, #{item.depositCardId,jdbcType=VARCHAR})
        </foreach>
    </insert>


    <update id="updateBatch" parameterType="java.util.List">
        update deposit_history
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="transaction_amount = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.transactionAmount != null">
                        when #{item.serialNumber,jdbcType=VARCHAR} then #{item.transactionAmount,jdbcType=DOUBLE}
                    </if>
                </foreach>
            </trim>
            <trim prefix="submitted_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.submittedTime != null">
                        when #{item.serialNumber,jdbcType=VARCHAR} then #{item.submittedTime,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="finished_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.finishedTime != null">
                        when #{item.serialNumber,jdbcType=VARCHAR} then #{item.finishedTime,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.status != null">
                        when #{item.serialNumber,jdbcType=VARCHAR} then #{item.status,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="deposit_card_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.depositCardId != null">
                        when #{item.serialNumber,jdbcType=VARCHAR} then #{item.depositCardId,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where serial_number in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.serialNumber,jdbcType=VARCHAR}
        </foreach>
    </update>
</mapper>